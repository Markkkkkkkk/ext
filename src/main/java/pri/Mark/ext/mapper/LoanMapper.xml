<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pri.Mark.ext.dao.LoanMapper" >
  <resultMap id="BaseResultMap" type="pri.Mark.ext.model.Loan" >
    <id column="loan_id" property="loanId" jdbcType="INTEGER" />
    <result column="loan_type" property="loanType" jdbcType="INTEGER" />
    <result column="loan_amount" property="loanAmount" jdbcType="VARCHAR" />
    <result column="loan_applyTime" property="loanApplytime" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    loan_id, loan_type, loan_amount, loan_applyTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pri.Mark.ext.model.LoanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from loan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from loan
    where loan_id = #{loanId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from loan
    where loan_id = #{loanId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pri.Mark.ext.model.LoanExample" >
    delete from loan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pri.Mark.ext.model.Loan" >
    insert into loan (loan_id, loan_type, loan_amount, 
      loan_applyTime)
    values (#{loanId,jdbcType=INTEGER}, #{loanType,jdbcType=INTEGER}, #{loanAmount,jdbcType=VARCHAR}, 
      #{loanApplytime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="pri.Mark.ext.model.Loan" >
    insert into loan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loanId != null" >
        loan_id,
      </if>
      <if test="loanType != null" >
        loan_type,
      </if>
      <if test="loanAmount != null" >
        loan_amount,
      </if>
      <if test="loanApplytime != null" >
        loan_applyTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loanId != null" >
        #{loanId,jdbcType=INTEGER},
      </if>
      <if test="loanType != null" >
        #{loanType,jdbcType=INTEGER},
      </if>
      <if test="loanAmount != null" >
        #{loanAmount,jdbcType=VARCHAR},
      </if>
      <if test="loanApplytime != null" >
        #{loanApplytime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pri.Mark.ext.model.LoanExample" resultType="java.lang.Integer" >
    select count(*) from loan
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update loan
    <set >
      <if test="record.loanId != null" >
        loan_id = #{record.loanId,jdbcType=INTEGER},
      </if>
      <if test="record.loanType != null" >
        loan_type = #{record.loanType,jdbcType=INTEGER},
      </if>
      <if test="record.loanAmount != null" >
        loan_amount = #{record.loanAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.loanApplytime != null" >
        loan_applyTime = #{record.loanApplytime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update loan
    set loan_id = #{record.loanId,jdbcType=INTEGER},
      loan_type = #{record.loanType,jdbcType=INTEGER},
      loan_amount = #{record.loanAmount,jdbcType=VARCHAR},
      loan_applyTime = #{record.loanApplytime,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pri.Mark.ext.model.Loan" >
    update loan
    <set >
      <if test="loanType != null" >
        loan_type = #{loanType,jdbcType=INTEGER},
      </if>
      <if test="loanAmount != null" >
        loan_amount = #{loanAmount,jdbcType=VARCHAR},
      </if>
      <if test="loanApplytime != null" >
        loan_applyTime = #{loanApplytime,jdbcType=DATE},
      </if>
    </set>
    where loan_id = #{loanId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pri.Mark.ext.model.Loan" >
    update loan
    set loan_type = #{loanType,jdbcType=INTEGER},
      loan_amount = #{loanAmount,jdbcType=VARCHAR},
      loan_applyTime = #{loanApplytime,jdbcType=DATE}
    where loan_id = #{loanId,jdbcType=INTEGER}
  </update>
</mapper>