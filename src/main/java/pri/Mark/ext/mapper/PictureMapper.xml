<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pri.Mark.ext.dao.PictureMapper" >
  <resultMap id="BaseResultMap" type="pri.Mark.ext.model.Picture" >
    <id column="picture_id" property="pictureId" jdbcType="INTEGER" />
    <result column="picture_inputTime" property="pictureInputtime" jdbcType="TIMESTAMP" />
    <result column="picture_deleteTime" property="pictureDeletetime" jdbcType="TIMESTAMP" />
    <result column="picture_name" property="pictureName" jdbcType="VARCHAR" />
    <result column="picture_owner" property="pictureOwner" jdbcType="VARCHAR" />
    <result column="picture_type" property="pictureType" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="pri.Mark.ext.model.Picture" extends="BaseResultMap" >
    <result column="picture_path" property="picturePath" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    picture_id, picture_inputTime, picture_deleteTime, picture_name, picture_owner, picture_type
  </sql>
  <sql id="Blob_Column_List" >
    picture_path
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="pri.Mark.ext.model.PictureExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from picture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pri.Mark.ext.model.PictureExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from picture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from picture
    where picture_id = #{pictureId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from picture
    where picture_id = #{pictureId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pri.Mark.ext.model.PictureExample" >
    delete from picture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pri.Mark.ext.model.Picture" >
    insert into picture (picture_id, picture_inputTime, picture_deleteTime, 
      picture_name, picture_owner, picture_type, 
      picture_path)
    values (#{pictureId,jdbcType=INTEGER}, #{pictureInputtime,jdbcType=TIMESTAMP}, #{pictureDeletetime,jdbcType=TIMESTAMP}, 
      #{pictureName,jdbcType=VARCHAR}, #{pictureOwner,jdbcType=VARCHAR}, #{pictureType,jdbcType=INTEGER}, 
      #{picturePath,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pri.Mark.ext.model.Picture" >
    insert into picture
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pictureId != null" >
        picture_id,
      </if>
      <if test="pictureInputtime != null" >
        picture_inputTime,
      </if>
      <if test="pictureDeletetime != null" >
        picture_deleteTime,
      </if>
      <if test="pictureName != null" >
        picture_name,
      </if>
      <if test="pictureOwner != null" >
        picture_owner,
      </if>
      <if test="pictureType != null" >
        picture_type,
      </if>
      <if test="picturePath != null" >
        picture_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pictureId != null" >
        #{pictureId,jdbcType=INTEGER},
      </if>
      <if test="pictureInputtime != null" >
        #{pictureInputtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pictureDeletetime != null" >
        #{pictureDeletetime,jdbcType=TIMESTAMP},
      </if>
      <if test="pictureName != null" >
        #{pictureName,jdbcType=VARCHAR},
      </if>
      <if test="pictureOwner != null" >
        #{pictureOwner,jdbcType=VARCHAR},
      </if>
      <if test="pictureType != null" >
        #{pictureType,jdbcType=INTEGER},
      </if>
      <if test="picturePath != null" >
        #{picturePath,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pri.Mark.ext.model.PictureExample" resultType="java.lang.Integer" >
    select count(*) from picture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update picture
    <set >
      <if test="record.pictureId != null" >
        picture_id = #{record.pictureId,jdbcType=INTEGER},
      </if>
      <if test="record.pictureInputtime != null" >
        picture_inputTime = #{record.pictureInputtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pictureDeletetime != null" >
        picture_deleteTime = #{record.pictureDeletetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pictureName != null" >
        picture_name = #{record.pictureName,jdbcType=VARCHAR},
      </if>
      <if test="record.pictureOwner != null" >
        picture_owner = #{record.pictureOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.pictureType != null" >
        picture_type = #{record.pictureType,jdbcType=INTEGER},
      </if>
      <if test="record.picturePath != null" >
        picture_path = #{record.picturePath,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update picture
    set picture_id = #{record.pictureId,jdbcType=INTEGER},
      picture_inputTime = #{record.pictureInputtime,jdbcType=TIMESTAMP},
      picture_deleteTime = #{record.pictureDeletetime,jdbcType=TIMESTAMP},
      picture_name = #{record.pictureName,jdbcType=VARCHAR},
      picture_owner = #{record.pictureOwner,jdbcType=VARCHAR},
      picture_type = #{record.pictureType,jdbcType=INTEGER},
      picture_path = #{record.picturePath,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update picture
    set picture_id = #{record.pictureId,jdbcType=INTEGER},
      picture_inputTime = #{record.pictureInputtime,jdbcType=TIMESTAMP},
      picture_deleteTime = #{record.pictureDeletetime,jdbcType=TIMESTAMP},
      picture_name = #{record.pictureName,jdbcType=VARCHAR},
      picture_owner = #{record.pictureOwner,jdbcType=VARCHAR},
      picture_type = #{record.pictureType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pri.Mark.ext.model.Picture" >
    update picture
    <set >
      <if test="pictureInputtime != null" >
        picture_inputTime = #{pictureInputtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pictureDeletetime != null" >
        picture_deleteTime = #{pictureDeletetime,jdbcType=TIMESTAMP},
      </if>
      <if test="pictureName != null" >
        picture_name = #{pictureName,jdbcType=VARCHAR},
      </if>
      <if test="pictureOwner != null" >
        picture_owner = #{pictureOwner,jdbcType=VARCHAR},
      </if>
      <if test="pictureType != null" >
        picture_type = #{pictureType,jdbcType=INTEGER},
      </if>
      <if test="picturePath != null" >
        picture_path = #{picturePath,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where picture_id = #{pictureId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="pri.Mark.ext.model.Picture" >
    update picture
    set picture_inputTime = #{pictureInputtime,jdbcType=TIMESTAMP},
      picture_deleteTime = #{pictureDeletetime,jdbcType=TIMESTAMP},
      picture_name = #{pictureName,jdbcType=VARCHAR},
      picture_owner = #{pictureOwner,jdbcType=VARCHAR},
      picture_type = #{pictureType,jdbcType=INTEGER},
      picture_path = #{picturePath,jdbcType=LONGVARCHAR}
    where picture_id = #{pictureId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pri.Mark.ext.model.Picture" >
    update picture
    set picture_inputTime = #{pictureInputtime,jdbcType=TIMESTAMP},
      picture_deleteTime = #{pictureDeletetime,jdbcType=TIMESTAMP},
      picture_name = #{pictureName,jdbcType=VARCHAR},
      picture_owner = #{pictureOwner,jdbcType=VARCHAR},
      picture_type = #{pictureType,jdbcType=INTEGER}
    where picture_id = #{pictureId,jdbcType=INTEGER}
  </update>
</mapper>