<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pri.Mark.ext.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="pri.Mark.ext.model.Student" >
    <id column="student_identity" property="studentIdentity" jdbcType="VARCHAR" />
    <result column="student_name" property="studentName" jdbcType="INTEGER" />
    <result column="student_sex" property="studentSex" jdbcType="INTEGER" />
    <result column="student_nation" property="studentNation" jdbcType="INTEGER" />
    <result column="student_zzmm" property="studentZzmm" jdbcType="INTEGER" />
    <result column="student_zipCode" property="studentZipcode" jdbcType="INTEGER" />
    <result column="student_phone" property="studentPhone" jdbcType="VARCHAR" />
    <result column="student_xz" property="studentXz" jdbcType="VARCHAR" />
    <result column="student_class" property="studentClass" jdbcType="INTEGER" />
    <result column="student_lqzy" property="studentLqzy" jdbcType="INTEGER" />
    <result column="student_relative" property="studentRelative" jdbcType="INTEGER" />
    <result column="student_QQ" property="studentQq" jdbcType="VARCHAR" />
    <result column="student_dormitory" property="studentDormitory" jdbcType="INTEGER" />
    <result column="student_personalDescription" property="studentPersonaldescription" jdbcType="INTEGER" />
    <result column="student_religion" property="studentReligion" jdbcType="INTEGER" />
    <result column="student_address" property="studentAddress" jdbcType="INTEGER" />
    <result column="student_time" property="studentTime" jdbcType="INTEGER" />
    <result column="student_diadic" property="studentDiadic" jdbcType="INTEGER" />
    <result column="student_gkxx" property="studentGkxx" jdbcType="INTEGER" />
    <result column="student_xf" property="studentXf" jdbcType="INTEGER" />
    <result column="student_idCard" property="studentIdcard" jdbcType="INTEGER" />
    <result column="student_bloodType" property="studentBloodtype" jdbcType="INTEGER" />
    <result column="student_healthStatus" property="studentHealthstatus" jdbcType="INTEGER" />
    <result column="student_loan" property="studentLoan" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    student_identity, student_name, student_sex, student_nation, student_zzmm, student_zipCode, 
    student_phone, student_xz, student_class, student_lqzy, student_relative, student_QQ, 
    student_dormitory, student_personalDescription, student_religion, student_address, 
    student_time, student_diadic, student_gkxx, student_xf, student_idCard, student_bloodType, 
    student_healthStatus, student_loan
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pri.Mark.ext.model.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from student
    where student_identity = #{studentIdentity,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from student
    where student_identity = #{studentIdentity,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="pri.Mark.ext.model.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pri.Mark.ext.model.Student" >
    insert into student (student_identity, student_name, student_sex, 
      student_nation, student_zzmm, student_zipCode, 
      student_phone, student_xz, student_class, 
      student_lqzy, student_relative, student_QQ, 
      student_dormitory, student_personalDescription, 
      student_religion, student_address, student_time, 
      student_diadic, student_gkxx, student_xf, 
      student_idCard, student_bloodType, student_healthStatus, 
      student_loan)
    values (#{studentIdentity,jdbcType=VARCHAR}, #{studentName,jdbcType=INTEGER}, #{studentSex,jdbcType=INTEGER}, 
      #{studentNation,jdbcType=INTEGER}, #{studentZzmm,jdbcType=INTEGER}, #{studentZipcode,jdbcType=INTEGER}, 
      #{studentPhone,jdbcType=VARCHAR}, #{studentXz,jdbcType=VARCHAR}, #{studentClass,jdbcType=INTEGER}, 
      #{studentLqzy,jdbcType=INTEGER}, #{studentRelative,jdbcType=INTEGER}, #{studentQq,jdbcType=VARCHAR}, 
      #{studentDormitory,jdbcType=INTEGER}, #{studentPersonaldescription,jdbcType=INTEGER}, 
      #{studentReligion,jdbcType=INTEGER}, #{studentAddress,jdbcType=INTEGER}, #{studentTime,jdbcType=INTEGER}, 
      #{studentDiadic,jdbcType=INTEGER}, #{studentGkxx,jdbcType=INTEGER}, #{studentXf,jdbcType=INTEGER}, 
      #{studentIdcard,jdbcType=INTEGER}, #{studentBloodtype,jdbcType=INTEGER}, #{studentHealthstatus,jdbcType=INTEGER}, 
      #{studentLoan,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="pri.Mark.ext.model.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentIdentity != null" >
        student_identity,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="studentSex != null" >
        student_sex,
      </if>
      <if test="studentNation != null" >
        student_nation,
      </if>
      <if test="studentZzmm != null" >
        student_zzmm,
      </if>
      <if test="studentZipcode != null" >
        student_zipCode,
      </if>
      <if test="studentPhone != null" >
        student_phone,
      </if>
      <if test="studentXz != null" >
        student_xz,
      </if>
      <if test="studentClass != null" >
        student_class,
      </if>
      <if test="studentLqzy != null" >
        student_lqzy,
      </if>
      <if test="studentRelative != null" >
        student_relative,
      </if>
      <if test="studentQq != null" >
        student_QQ,
      </if>
      <if test="studentDormitory != null" >
        student_dormitory,
      </if>
      <if test="studentPersonaldescription != null" >
        student_personalDescription,
      </if>
      <if test="studentReligion != null" >
        student_religion,
      </if>
      <if test="studentAddress != null" >
        student_address,
      </if>
      <if test="studentTime != null" >
        student_time,
      </if>
      <if test="studentDiadic != null" >
        student_diadic,
      </if>
      <if test="studentGkxx != null" >
        student_gkxx,
      </if>
      <if test="studentXf != null" >
        student_xf,
      </if>
      <if test="studentIdcard != null" >
        student_idCard,
      </if>
      <if test="studentBloodtype != null" >
        student_bloodType,
      </if>
      <if test="studentHealthstatus != null" >
        student_healthStatus,
      </if>
      <if test="studentLoan != null" >
        student_loan,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentIdentity != null" >
        #{studentIdentity,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=INTEGER},
      </if>
      <if test="studentSex != null" >
        #{studentSex,jdbcType=INTEGER},
      </if>
      <if test="studentNation != null" >
        #{studentNation,jdbcType=INTEGER},
      </if>
      <if test="studentZzmm != null" >
        #{studentZzmm,jdbcType=INTEGER},
      </if>
      <if test="studentZipcode != null" >
        #{studentZipcode,jdbcType=INTEGER},
      </if>
      <if test="studentPhone != null" >
        #{studentPhone,jdbcType=VARCHAR},
      </if>
      <if test="studentXz != null" >
        #{studentXz,jdbcType=VARCHAR},
      </if>
      <if test="studentClass != null" >
        #{studentClass,jdbcType=INTEGER},
      </if>
      <if test="studentLqzy != null" >
        #{studentLqzy,jdbcType=INTEGER},
      </if>
      <if test="studentRelative != null" >
        #{studentRelative,jdbcType=INTEGER},
      </if>
      <if test="studentQq != null" >
        #{studentQq,jdbcType=VARCHAR},
      </if>
      <if test="studentDormitory != null" >
        #{studentDormitory,jdbcType=INTEGER},
      </if>
      <if test="studentPersonaldescription != null" >
        #{studentPersonaldescription,jdbcType=INTEGER},
      </if>
      <if test="studentReligion != null" >
        #{studentReligion,jdbcType=INTEGER},
      </if>
      <if test="studentAddress != null" >
        #{studentAddress,jdbcType=INTEGER},
      </if>
      <if test="studentTime != null" >
        #{studentTime,jdbcType=INTEGER},
      </if>
      <if test="studentDiadic != null" >
        #{studentDiadic,jdbcType=INTEGER},
      </if>
      <if test="studentGkxx != null" >
        #{studentGkxx,jdbcType=INTEGER},
      </if>
      <if test="studentXf != null" >
        #{studentXf,jdbcType=INTEGER},
      </if>
      <if test="studentIdcard != null" >
        #{studentIdcard,jdbcType=INTEGER},
      </if>
      <if test="studentBloodtype != null" >
        #{studentBloodtype,jdbcType=INTEGER},
      </if>
      <if test="studentHealthstatus != null" >
        #{studentHealthstatus,jdbcType=INTEGER},
      </if>
      <if test="studentLoan != null" >
        #{studentLoan,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pri.Mark.ext.model.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.studentIdentity != null" >
        student_identity = #{record.studentIdentity,jdbcType=VARCHAR},
      </if>
      <if test="record.studentName != null" >
        student_name = #{record.studentName,jdbcType=INTEGER},
      </if>
      <if test="record.studentSex != null" >
        student_sex = #{record.studentSex,jdbcType=INTEGER},
      </if>
      <if test="record.studentNation != null" >
        student_nation = #{record.studentNation,jdbcType=INTEGER},
      </if>
      <if test="record.studentZzmm != null" >
        student_zzmm = #{record.studentZzmm,jdbcType=INTEGER},
      </if>
      <if test="record.studentZipcode != null" >
        student_zipCode = #{record.studentZipcode,jdbcType=INTEGER},
      </if>
      <if test="record.studentPhone != null" >
        student_phone = #{record.studentPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.studentXz != null" >
        student_xz = #{record.studentXz,jdbcType=VARCHAR},
      </if>
      <if test="record.studentClass != null" >
        student_class = #{record.studentClass,jdbcType=INTEGER},
      </if>
      <if test="record.studentLqzy != null" >
        student_lqzy = #{record.studentLqzy,jdbcType=INTEGER},
      </if>
      <if test="record.studentRelative != null" >
        student_relative = #{record.studentRelative,jdbcType=INTEGER},
      </if>
      <if test="record.studentQq != null" >
        student_QQ = #{record.studentQq,jdbcType=VARCHAR},
      </if>
      <if test="record.studentDormitory != null" >
        student_dormitory = #{record.studentDormitory,jdbcType=INTEGER},
      </if>
      <if test="record.studentPersonaldescription != null" >
        student_personalDescription = #{record.studentPersonaldescription,jdbcType=INTEGER},
      </if>
      <if test="record.studentReligion != null" >
        student_religion = #{record.studentReligion,jdbcType=INTEGER},
      </if>
      <if test="record.studentAddress != null" >
        student_address = #{record.studentAddress,jdbcType=INTEGER},
      </if>
      <if test="record.studentTime != null" >
        student_time = #{record.studentTime,jdbcType=INTEGER},
      </if>
      <if test="record.studentDiadic != null" >
        student_diadic = #{record.studentDiadic,jdbcType=INTEGER},
      </if>
      <if test="record.studentGkxx != null" >
        student_gkxx = #{record.studentGkxx,jdbcType=INTEGER},
      </if>
      <if test="record.studentXf != null" >
        student_xf = #{record.studentXf,jdbcType=INTEGER},
      </if>
      <if test="record.studentIdcard != null" >
        student_idCard = #{record.studentIdcard,jdbcType=INTEGER},
      </if>
      <if test="record.studentBloodtype != null" >
        student_bloodType = #{record.studentBloodtype,jdbcType=INTEGER},
      </if>
      <if test="record.studentHealthstatus != null" >
        student_healthStatus = #{record.studentHealthstatus,jdbcType=INTEGER},
      </if>
      <if test="record.studentLoan != null" >
        student_loan = #{record.studentLoan,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set student_identity = #{record.studentIdentity,jdbcType=VARCHAR},
      student_name = #{record.studentName,jdbcType=INTEGER},
      student_sex = #{record.studentSex,jdbcType=INTEGER},
      student_nation = #{record.studentNation,jdbcType=INTEGER},
      student_zzmm = #{record.studentZzmm,jdbcType=INTEGER},
      student_zipCode = #{record.studentZipcode,jdbcType=INTEGER},
      student_phone = #{record.studentPhone,jdbcType=VARCHAR},
      student_xz = #{record.studentXz,jdbcType=VARCHAR},
      student_class = #{record.studentClass,jdbcType=INTEGER},
      student_lqzy = #{record.studentLqzy,jdbcType=INTEGER},
      student_relative = #{record.studentRelative,jdbcType=INTEGER},
      student_QQ = #{record.studentQq,jdbcType=VARCHAR},
      student_dormitory = #{record.studentDormitory,jdbcType=INTEGER},
      student_personalDescription = #{record.studentPersonaldescription,jdbcType=INTEGER},
      student_religion = #{record.studentReligion,jdbcType=INTEGER},
      student_address = #{record.studentAddress,jdbcType=INTEGER},
      student_time = #{record.studentTime,jdbcType=INTEGER},
      student_diadic = #{record.studentDiadic,jdbcType=INTEGER},
      student_gkxx = #{record.studentGkxx,jdbcType=INTEGER},
      student_xf = #{record.studentXf,jdbcType=INTEGER},
      student_idCard = #{record.studentIdcard,jdbcType=INTEGER},
      student_bloodType = #{record.studentBloodtype,jdbcType=INTEGER},
      student_healthStatus = #{record.studentHealthstatus,jdbcType=INTEGER},
      student_loan = #{record.studentLoan,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pri.Mark.ext.model.Student" >
    update student
    <set >
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=INTEGER},
      </if>
      <if test="studentSex != null" >
        student_sex = #{studentSex,jdbcType=INTEGER},
      </if>
      <if test="studentNation != null" >
        student_nation = #{studentNation,jdbcType=INTEGER},
      </if>
      <if test="studentZzmm != null" >
        student_zzmm = #{studentZzmm,jdbcType=INTEGER},
      </if>
      <if test="studentZipcode != null" >
        student_zipCode = #{studentZipcode,jdbcType=INTEGER},
      </if>
      <if test="studentPhone != null" >
        student_phone = #{studentPhone,jdbcType=VARCHAR},
      </if>
      <if test="studentXz != null" >
        student_xz = #{studentXz,jdbcType=VARCHAR},
      </if>
      <if test="studentClass != null" >
        student_class = #{studentClass,jdbcType=INTEGER},
      </if>
      <if test="studentLqzy != null" >
        student_lqzy = #{studentLqzy,jdbcType=INTEGER},
      </if>
      <if test="studentRelative != null" >
        student_relative = #{studentRelative,jdbcType=INTEGER},
      </if>
      <if test="studentQq != null" >
        student_QQ = #{studentQq,jdbcType=VARCHAR},
      </if>
      <if test="studentDormitory != null" >
        student_dormitory = #{studentDormitory,jdbcType=INTEGER},
      </if>
      <if test="studentPersonaldescription != null" >
        student_personalDescription = #{studentPersonaldescription,jdbcType=INTEGER},
      </if>
      <if test="studentReligion != null" >
        student_religion = #{studentReligion,jdbcType=INTEGER},
      </if>
      <if test="studentAddress != null" >
        student_address = #{studentAddress,jdbcType=INTEGER},
      </if>
      <if test="studentTime != null" >
        student_time = #{studentTime,jdbcType=INTEGER},
      </if>
      <if test="studentDiadic != null" >
        student_diadic = #{studentDiadic,jdbcType=INTEGER},
      </if>
      <if test="studentGkxx != null" >
        student_gkxx = #{studentGkxx,jdbcType=INTEGER},
      </if>
      <if test="studentXf != null" >
        student_xf = #{studentXf,jdbcType=INTEGER},
      </if>
      <if test="studentIdcard != null" >
        student_idCard = #{studentIdcard,jdbcType=INTEGER},
      </if>
      <if test="studentBloodtype != null" >
        student_bloodType = #{studentBloodtype,jdbcType=INTEGER},
      </if>
      <if test="studentHealthstatus != null" >
        student_healthStatus = #{studentHealthstatus,jdbcType=INTEGER},
      </if>
      <if test="studentLoan != null" >
        student_loan = #{studentLoan,jdbcType=INTEGER},
      </if>
    </set>
    where student_identity = #{studentIdentity,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="pri.Mark.ext.model.Student" >
    update student
    set student_name = #{studentName,jdbcType=INTEGER},
      student_sex = #{studentSex,jdbcType=INTEGER},
      student_nation = #{studentNation,jdbcType=INTEGER},
      student_zzmm = #{studentZzmm,jdbcType=INTEGER},
      student_zipCode = #{studentZipcode,jdbcType=INTEGER},
      student_phone = #{studentPhone,jdbcType=VARCHAR},
      student_xz = #{studentXz,jdbcType=VARCHAR},
      student_class = #{studentClass,jdbcType=INTEGER},
      student_lqzy = #{studentLqzy,jdbcType=INTEGER},
      student_relative = #{studentRelative,jdbcType=INTEGER},
      student_QQ = #{studentQq,jdbcType=VARCHAR},
      student_dormitory = #{studentDormitory,jdbcType=INTEGER},
      student_personalDescription = #{studentPersonaldescription,jdbcType=INTEGER},
      student_religion = #{studentReligion,jdbcType=INTEGER},
      student_address = #{studentAddress,jdbcType=INTEGER},
      student_time = #{studentTime,jdbcType=INTEGER},
      student_diadic = #{studentDiadic,jdbcType=INTEGER},
      student_gkxx = #{studentGkxx,jdbcType=INTEGER},
      student_xf = #{studentXf,jdbcType=INTEGER},
      student_idCard = #{studentIdcard,jdbcType=INTEGER},
      student_bloodType = #{studentBloodtype,jdbcType=INTEGER},
      student_healthStatus = #{studentHealthstatus,jdbcType=INTEGER},
      student_loan = #{studentLoan,jdbcType=INTEGER}
    where student_identity = #{studentIdentity,jdbcType=VARCHAR}
  </update>
</mapper>