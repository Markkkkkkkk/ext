<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pri.Mark.ext.dao.TabdescriptionMapper" >
  <resultMap id="BaseResultMap" type="pri.Mark.ext.model.Tabdescription" >
    <id column="TABdescription_id" property="tabdescriptionId" jdbcType="INTEGER" />
    <result column="TABdescription_zdName" property="tabdescriptionZdname" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="pri.Mark.ext.model.Tabdescription" extends="BaseResultMap" >
    <result column="TABdescription_description" property="tabdescriptionDescription" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TABdescription_id, TABdescription_zdName
  </sql>
  <sql id="Blob_Column_List" >
    TABdescription_description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="pri.Mark.ext.model.TabdescriptionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tabdescription
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pri.Mark.ext.model.TabdescriptionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tabdescription
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tabdescription
    where TABdescription_id = #{tabdescriptionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tabdescription
    where TABdescription_id = #{tabdescriptionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pri.Mark.ext.model.TabdescriptionExample" >
    delete from tabdescription
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pri.Mark.ext.model.Tabdescription" >
    insert into tabdescription (TABdescription_id, TABdescription_zdName, 
      TABdescription_description)
    values (#{tabdescriptionId,jdbcType=INTEGER}, #{tabdescriptionZdname,jdbcType=VARCHAR}, 
      #{tabdescriptionDescription,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pri.Mark.ext.model.Tabdescription" >
    insert into tabdescription
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tabdescriptionId != null" >
        TABdescription_id,
      </if>
      <if test="tabdescriptionZdname != null" >
        TABdescription_zdName,
      </if>
      <if test="tabdescriptionDescription != null" >
        TABdescription_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tabdescriptionId != null" >
        #{tabdescriptionId,jdbcType=INTEGER},
      </if>
      <if test="tabdescriptionZdname != null" >
        #{tabdescriptionZdname,jdbcType=VARCHAR},
      </if>
      <if test="tabdescriptionDescription != null" >
        #{tabdescriptionDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pri.Mark.ext.model.TabdescriptionExample" resultType="java.lang.Integer" >
    select count(*) from tabdescription
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tabdescription
    <set >
      <if test="record.tabdescriptionId != null" >
        TABdescription_id = #{record.tabdescriptionId,jdbcType=INTEGER},
      </if>
      <if test="record.tabdescriptionZdname != null" >
        TABdescription_zdName = #{record.tabdescriptionZdname,jdbcType=VARCHAR},
      </if>
      <if test="record.tabdescriptionDescription != null" >
        TABdescription_description = #{record.tabdescriptionDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update tabdescription
    set TABdescription_id = #{record.tabdescriptionId,jdbcType=INTEGER},
      TABdescription_zdName = #{record.tabdescriptionZdname,jdbcType=VARCHAR},
      TABdescription_description = #{record.tabdescriptionDescription,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tabdescription
    set TABdescription_id = #{record.tabdescriptionId,jdbcType=INTEGER},
      TABdescription_zdName = #{record.tabdescriptionZdname,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pri.Mark.ext.model.Tabdescription" >
    update tabdescription
    <set >
      <if test="tabdescriptionZdname != null" >
        TABdescription_zdName = #{tabdescriptionZdname,jdbcType=VARCHAR},
      </if>
      <if test="tabdescriptionDescription != null" >
        TABdescription_description = #{tabdescriptionDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where TABdescription_id = #{tabdescriptionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="pri.Mark.ext.model.Tabdescription" >
    update tabdescription
    set TABdescription_zdName = #{tabdescriptionZdname,jdbcType=VARCHAR},
      TABdescription_description = #{tabdescriptionDescription,jdbcType=LONGVARCHAR}
    where TABdescription_id = #{tabdescriptionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pri.Mark.ext.model.Tabdescription" >
    update tabdescription
    set TABdescription_zdName = #{tabdescriptionZdname,jdbcType=VARCHAR}
    where TABdescription_id = #{tabdescriptionId,jdbcType=INTEGER}
  </update>
</mapper>