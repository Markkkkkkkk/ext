<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pri.Mark.ext.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="pri.Mark.ext.model.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_saltPassword" property="userSaltpassword" jdbcType="VARCHAR" />
    <result column="user_role" property="userRole" jdbcType="INTEGER" />
    <result column="user_log" property="userLog" jdbcType="INTEGER" />
    <result column="user_salt" property="userSalt" jdbcType="VARCHAR" />
    <result column="user_loginToken" property="userLogintoken" jdbcType="VARCHAR" />
    <result column="user_alterPasswordToken" property="userAlterpasswordtoken" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, user_saltPassword, user_role, user_log, user_salt, user_loginToken, user_alterPasswordToken, 
    user_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pri.Mark.ext.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pri.Mark.ext.model.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pri.Mark.ext.model.User" >
    insert into user (user_id, user_saltPassword, user_role, 
      user_log, user_salt, user_loginToken, 
      user_alterPasswordToken, user_name)
    values (#{userId,jdbcType=INTEGER}, #{userSaltpassword,jdbcType=VARCHAR}, #{userRole,jdbcType=INTEGER}, 
      #{userLog,jdbcType=INTEGER}, #{userSalt,jdbcType=VARCHAR}, #{userLogintoken,jdbcType=VARCHAR}, 
      #{userAlterpasswordtoken,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="pri.Mark.ext.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userSaltpassword != null" >
        user_saltPassword,
      </if>
      <if test="userRole != null" >
        user_role,
      </if>
      <if test="userLog != null" >
        user_log,
      </if>
      <if test="userSalt != null" >
        user_salt,
      </if>
      <if test="userLogintoken != null" >
        user_loginToken,
      </if>
      <if test="userAlterpasswordtoken != null" >
        user_alterPasswordToken,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userSaltpassword != null" >
        #{userSaltpassword,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null" >
        #{userRole,jdbcType=INTEGER},
      </if>
      <if test="userLog != null" >
        #{userLog,jdbcType=INTEGER},
      </if>
      <if test="userSalt != null" >
        #{userSalt,jdbcType=VARCHAR},
      </if>
      <if test="userLogintoken != null" >
        #{userLogintoken,jdbcType=VARCHAR},
      </if>
      <if test="userAlterpasswordtoken != null" >
        #{userAlterpasswordtoken,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pri.Mark.ext.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userSaltpassword != null" >
        user_saltPassword = #{record.userSaltpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userRole != null" >
        user_role = #{record.userRole,jdbcType=INTEGER},
      </if>
      <if test="record.userLog != null" >
        user_log = #{record.userLog,jdbcType=INTEGER},
      </if>
      <if test="record.userSalt != null" >
        user_salt = #{record.userSalt,jdbcType=VARCHAR},
      </if>
      <if test="record.userLogintoken != null" >
        user_loginToken = #{record.userLogintoken,jdbcType=VARCHAR},
      </if>
      <if test="record.userAlterpasswordtoken != null" >
        user_alterPasswordToken = #{record.userAlterpasswordtoken,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_saltPassword = #{record.userSaltpassword,jdbcType=VARCHAR},
      user_role = #{record.userRole,jdbcType=INTEGER},
      user_log = #{record.userLog,jdbcType=INTEGER},
      user_salt = #{record.userSalt,jdbcType=VARCHAR},
      user_loginToken = #{record.userLogintoken,jdbcType=VARCHAR},
      user_alterPasswordToken = #{record.userAlterpasswordtoken,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pri.Mark.ext.model.User" >
    update user
    <set >
      <if test="userSaltpassword != null" >
        user_saltPassword = #{userSaltpassword,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null" >
        user_role = #{userRole,jdbcType=INTEGER},
      </if>
      <if test="userLog != null" >
        user_log = #{userLog,jdbcType=INTEGER},
      </if>
      <if test="userSalt != null" >
        user_salt = #{userSalt,jdbcType=VARCHAR},
      </if>
      <if test="userLogintoken != null" >
        user_loginToken = #{userLogintoken,jdbcType=VARCHAR},
      </if>
      <if test="userAlterpasswordtoken != null" >
        user_alterPasswordToken = #{userAlterpasswordtoken,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pri.Mark.ext.model.User" >
    update user
    set user_saltPassword = #{userSaltpassword,jdbcType=VARCHAR},
      user_role = #{userRole,jdbcType=INTEGER},
      user_log = #{userLog,jdbcType=INTEGER},
      user_salt = #{userSalt,jdbcType=VARCHAR},
      user_loginToken = #{userLogintoken,jdbcType=VARCHAR},
      user_alterPasswordToken = #{userAlterpasswordtoken,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>